#Para representar con vectores:
plot "campo_vector.dat" u 1:2:3:4 with vectors

con
--------------------------
campo_vector.dat
#x1	y1	x2	y2
---------------------------

la orden une el punto (x1,y1) con el punto (x1+x2,y1+y2) con un vector.
----------------------------------------------------------------------------------

#Introducir single point en una gráfica
-->plot f(x), 'puntos.dat' w p pt 7 ps 5 notitle
--------------------------
puntos.dat
x	y #dibuja punto en (x,y)
---------------------------

#introducir texto en gráfica
-->set label 3 "texto" at 1,2      #coloca etiqueta 3 que pone "texto" en el punto (1,2)

#pausar programa
-->pause -1  "Hit return to continue"

#guardar variables en un fichero (ej: parametros de un fit)
-->set print "fliename"  # guarda todo lo que escribas con print en fichero <filename> sobrescribiendo
-->set print "filename" append # idem sin sobreescribir
-->print something  # guarda <something> en <filename> (si no usamos set print, muestra <something> por pantalla>

#guardar error de un fit en una variable:
If activated by using "set fit errorvariables", the error for each fitted parameter will be stored in a variable named like the parameter, but with "_err" appended.

#Letras griegas
{/Symbol r} #escribe rho, !!!OJO!!! la sintaxis requiere que la "S" sea mayúscula. con "s" minúscula usa otro tipo de tipografía

#simbolo de grados
º={/Symbol \260}

#defino función 1-1/x entre puntos x1=1 y x2=x
f(x) = (x > 1 && x < 2) ? 1-1/x : 1/0

#Format of label
set format y "%.1e" # one decimal + exponential notation

#dibujar linea Plot line// plot arrow
set arrow from 0.5,-0.5 to 0.5,0.9 nohead lc rgb 'red'

#Add tic in axis
set xtics add ("name" 2.28)--> añade "name" sin comillas en posicion x=2.28 y=0

#Modify xtics
set xtics ("name" xposition,"name2" xpos2,...)--> it is different from xtics add, since there only will appear 
the points that we add by hand (instead of adding)

#do loop 
-->DATA NAME HAS TO BE PROPERLY FORMATTED
set term png size 1600,1200 #don't know if works with a different terminal
do for [t=1:30]{ #it'll create 30 figures
set output "image.00".t.".png" #name of the 30 .png figures
plot "picture.".t.".dat" u 1:2:3:4 w vectors head filled lt 2 notitle,"picture.".t.".dat" u 1:2 w points pt 7 notitle
}


